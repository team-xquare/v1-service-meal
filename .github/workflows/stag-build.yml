name: Stag Node.js Build

on:
  push:
    branches:
      - main

env:
  SERVICE_NAME: meal
  SERVICE_TYPE: be

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: rm package-lock.json && rm -rf node_modules && npm install
    - run: npm ci
    - run: npm link webpack
    - run: npm run build --if-present

    - name: Get branch name
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr /# -)" >> $GITHUB_ENV
      
    - name: Login to ECR
      id: ecr
      uses: elgohr/ecr-login-action@master
      with:
        access_key: ${{ secrets.AWS_ACCESS_KEY }}
        secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
        region: ${{ secrets.AWS_REGION }}

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: ${{env.SERVICE_NAME}}-${{env.SERVICE_TYPE}}
        username: ${{ steps.ecr.outputs.username }}
        password: ${{ steps.ecr.outputs.password }}
        registry: ${{ steps.ecr.outputs.registry }}
        tags: ${{ github.sha }}
        buildargs: |
          DATABASE_HOST=${{secrets.DATABASE_HOST_STAGE}}
          DATABASE_PORT=${{secrets.DATABASE_PORT_STAGE}}
          DATABASE_USERNAME=${{secrets.DATABASE_USERNAME_STAGE}}
          DATABASE_PASSWORD=${{secrets.DATABASE_PASSWORD_STAGE}}
          DATABASE_NAME=${{secrets.DATABASE_NAME_STAGE}}
          DATABASE_SYNCHRONIZE=${{secrets.DATABASE_SYNCHRONIZE_STAGE}}

    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.GITOPS_DEPLOY_STAGE_TOKEN }}
        repository: team-xquare/xquare-gitops-repo-staging
        event-type: update_image
        client-payload: '{"ref": "${{ github.ref }}", 
                          "version": "${{ github.sha }}",
                          "service_name": "${{env.SERVICE_NAME}}",
                          "service_type": "${{env.SERVICE_TYPE}}"}'
